# Definition for a binary tree node.
class TreeNode:
     def __init__(self, val=0, left=None, right=None):
         self.val = val
         self.left = left
         self.right = right
class Solution:
    def hasPathSum(self, root: Optional[TreeNode], targetSum: int) -> bool:
        if not root:
            return False
        
        if not root.left and not root.right: # If we reached a leaf node check the current node 
            return root.val == targetSum

        
        targetSum -=root.val #Updating targetsum with subtrees 
        return (self.hasPathSum(root.left,targetSum) or self.hasPathSum(root.right,targetSum))
        
